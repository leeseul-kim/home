#배열
	
	: 같은 형태(Type)의 데이터를 여러개 모아서 한꺼번에 관리하는 방식
	
	데이터가 많은 경우에도 원칙적으로 데이터 갯수만큼 변수를 만들어야한다.
	이러면 변수를 만들때도 불편하고, 그 데이터를 사용할 때도 불편한다.
	
	이러한 문제를 해결하기 위해서 제시된 방법이 배열이다.
	
	즉, 배열이란 하나의 변수를 이용하여 여러개의 데이터를 관리할 수 있도록 하는 것이다.
	
	
	참고]
		
		자바에서의 변수 형태
			
			1. 기본형변수(Primitive Type, Value Type)
				: 변수 안에 기억된 내용이 데이터 자체인 경우.
				변수를 찾으면 그 안에 사용 가능한 데이터가 존재하는 것.
				
				8가지 데이터 타입으로 만들어진 변수.
				(boolean, char, byte, short, int, long, float, double)
				
			2. 참조형변수(Reference Type, 주소 Type)
				: 변수 안에 기억된 내용이 주소인 경우.
				변수를 찾으면 그 안에 데이터가 기억된 위치(주소)를 알려준다.
				
				기본타입 8가지 이외의 형태로 만들어진 모든 변수
				//예로, 클래스 함수 String etc.
				
			
			참고]
				
				Heap 영역
					
					특징]
						1. 반드시 주소를 알아야 사용할 수 있는 영역이다.
						
						2. 자바의 메모리 영역 중 크기가 가장 큰 영역이며, 확장이 가능하다.
						부족하다면, 스스로가 다른 영역을 빼앗아 Heap 영역으로 사용할 수 있다.
							//그러므로 자바는 많은 양의 데이터가 필요할때, 사이즈가 큰 데이터는
							Heap 영역에 기억하도록 되어있다.
						
						3. 원칙적으로, 한번 만들어지면 그 프로그램이 종료될 때까지 없어지지않는다.
						
						4. Heap 영역에 생기는 메모리는 자동 초기화된다.
						(기본형변수는 자동초기화된다. 마치 멤버변수가 자동초기화 되는 것처럼)

=====================================================================================================

#배열 만드는 방법

	1. 배열은 원칙적으로 데이터가 기억될 공간을 Heap 영역에 만들어야한다. 
	//new 명령 사용 
	
	
		명령어]
		
			new 데이터타입[갯수];
			
				데이터타입	: Heap 영역에 만들 데이터 영역의 형태를 지정한다. (Heap Type)
				[갯수] 		: Heap 영역에 만들 데이터 영역의 갯수를 지정한다.
				
			예]
				new int[10];
					//Heap 영역에 int형 데이터를 기억할 메모리 공간을 10개 만들어주세요.
					
				new boolean[5];
					//Heap 영역에 boolean형 데이터를 기억할 메모리 공간을 5개 만들어주세요.
					
			참고]
			
				new 명령
					1. Heap 영역에 어떤 것을 만드세요.
					
					2. 만들어진 메모리에 시작 주소를 알려준다.
					
	
	2. Heap 영역에 있는 메모리의 주소를 기억할 변수를 만들어야 한다.
	
		명령어]
				
			데이터타입[] 변수명;
			
			예]
				int[] num;
				
				데이터타입[] : 자신이 관리할 Heap 영역에 있는 실제 데이터형태에 따라 달라지는 부분.
					//Heap Type
				
				***
				결론]
					
					Heap Type이 같은 주소만 기억할 수 있다.
					
					int[] num = new float[5];
						//에러. Heap Type이 다르므로.
						
					float[] num = new int[5];
						//가능. float이 메모리가 더 크므로.
	
#배열 만드는 법
	
	1. 만들 배열이 Heap 영역에 생길 때 이 주소를 기억할 변수를 준비한다.
	
		int[] num; //변수선언
		
	2. Heap 영역에 필요한 메모리를 만들고, 그 주소를 준비한 변수에 대입(기억)한다.
	  
		num = new int[5]; //변수대입  			


#배열 사용하는 법

	형식]
	
		변수[index];
		
		
		참고]
		
			index는 0부터 시작한다.  

	참고]
		
		변수(배열주소).length
		//배열주소가 관리하는 곳에 있는 메모리의 갯수를 알려주는 변수명령어.
		
		예]
			int[] num = new int[10];
			
			System.out.println(num.length);
				//10
				//num이 가리키는 곳에 10개의 메모리가 존재하기 때문.
				
	
참고]
	
	배열의 초기화
	
		: 배열 메모리는 Heap 영역에 생기므로 자동으로 초기화가 이루어진다.
		(기본형 데이터 타입에 한해서 자동초기화가 이루어진다.)
		정수	- 0
		실수	- 0.0
		논리	- false
		문자	- 0
		
		경우에 따라서, 배열 메모리에 강제로 특정값을 입력할 필요가 있다.
			//이때 이것을 배열의 초기화라고 한다.
			
		
		형식1]
			
			int[] num = {1, 2, 3, 4, 5}; 
			//이 경우, 배열의 크기를 지정하지 않음.
			
			
		형식2]
			
			int[] num = new int[] {1, 2, 3, 4, 5};
			
		
		***
		주의]
		
			배열을 초기화할 때는 배열의 크기를 지정할 수 없다.
			왜냐하면, 입력해놓은(초기화해놓은) 데이터 갯수로 배열의 크기가 정해지기 때문.
			따라서, 자동으로 배열의 크기가 결정이 된다.
			
	
	참고]
	
		Arrays.toString()
			//배열을 출력하기 위해서는 반복문을 사용하여 출력을 해야한다.
			하지만, 단순히 배열의 내용을 확인만 하는 용도로 사용하기에는 불편이 있다.
			
			이런 경우를 위해, Arrays.toString()은 배열의 기억된 데이터만 확인하는 용도로,
			배열이 가진 모든 데이터를 문자열로 변환하여 반환해주는 기능을 가진 함수이다.
			
			
			형식]
				
				import java.util.*;
					//Arrays.toString()의 주소를 찾기위한 java.util 패키지
					
				Arrays.toString(배열주소);
				

참고]
	
	배열변수 선언을 할때,
		
			데이터타입 변수명[];
			
	의 형태도 앞서 설명한 선언방법과 동일하다.

=====================================================================================================

<<문제>>

1.
	'A' ~ 'J' 까지 문자를 순차적으로 만들어서 배열에 대입하고,
	각 문자를 하나씩 꺼내서 소문자로 변환한 후 출력하세요.
	그리고, 배열에 담긴 내용을 문자열로 확인하세요.


2.
	'A' ~ 'J' 까지 문자를 랜덤하게 100개 발생시킨 후 
	각 문자의 카운트를 구해서 숫자로 출력하세요.
	
	추가로, 숫자만큼 * 표시를 해주세요.
	

3.
	int[] coin = {10000, 5000, 1000, 500, 100, 50, 10, 1};
	이라는 배열을 이용하여, 79,456원을 위의 화폐단위로 계산할 때,
	각각 몇 장, 몇 개가 필요한지 갯수를 저장할 배열을 만들고, 
	그 배열을 출력하는 프로그램을 작성하세요.
	
	
4.
	반지름 5개 숫자를 랜덤하게 발생시켜 기억할 배열을 만들고, 
	각각의 반지름을 가진 원의 넓이를 계산하여 저장할 배열을 만들고,
	각 원의 둘레를 계산해서 저장할 배열도 만들어,
	결과를 출력하는 프로그램을 작성하세요.
	
	단, 출력형태는 
		예]
			반지름 : 5, 원의 넓이 : xxxx, 원의 둘레 : xxxx
	의 형태로 출력되게 하세요.
	

5.
	피보나치 수열 10개를 저장할 배열을 만들고,
	배열에 값을 입력하여 배열에 저장된 데이터를 출력하세요.
	

6.
	팩토리얼 10개를 저장할 배열을 만들고
	1부터 순차적으로 10까지의 팩토리얼을 만들어서 배열에 담고 꺼내어 출력하세요.
	
	
	
7.
	문자열을 입력받아서 문자배열에 문자열을 이루는 문자를 순차적으로 저장하세요.
	
	참고]
		문자열의 특정위치의 문자를 추출해주는 함수
		
		문자열.charAt(위치값);
		
		
8.
	회원의 이름, 전화번호, 이메일을 저장할 배열을 만들고 데이터를 입력해서
	회원의 이름을 입력하면 이름, 전화번호, 이메일을 출력해주는 프로그램을 작성하세요.








